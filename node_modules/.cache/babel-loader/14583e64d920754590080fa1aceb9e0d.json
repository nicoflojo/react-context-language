{"ast":null,"code":"import _defineProperty from \"/Users/Nico/ReactCourse/translate/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Nico/ReactCourse/translate/src/contexts/LanguageContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nconst Context = React.createContext('english');\nexport class LanguageStore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: 'english'\n    };\n\n    this.onLanguageChange = language => {\n      this.setState({\n        language\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Context.Proivder, {\n      value: _objectSpread({}, this.state, {\n        onLanguageChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nexport default Context;","map":{"version":3,"sources":["/Users/Nico/ReactCourse/translate/src/contexts/LanguageContext.js"],"names":["React","Context","createContext","LanguageStore","Component","state","language","onLanguageChange","setState","render","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,CAAoB,SAApB,CAAhB;AAEA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADyC;;AAAA,SAG/CC,gBAH+C,GAG3BD,QAAD,IAAc;AACjC,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KALgD;AAAA;;AAOjDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,oBAAQ,KAAKJ,KAAb;AAAoBE,QAAAA;AAApB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKG,KAAL,CAAWC,QADd,CADF;AAKD;;AAbgD;AAgBnD,eAAeV,OAAf","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext('english'); \n\nexport class LanguageStore extends React.Component {\n  state = { language: 'english' };\n\n    onLanguageChange = (language) => {\n    this.setState({ language });\n  }\n\n  render() {\n    return (\n      <Context.Proivder value={{ ... this.state, onLanguageChange }}>\n        {this.props.children}\n      </Context.Proivder>\n    );\n  }\n}\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}